/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TokenTemplate,
  TokenTemplateInterface,
} from "../../contracts/TokenTemplate";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_initialOwner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_initialSupply",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isMintable",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isPreSale",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "preSaleAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "preSaleAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isMintable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161224238038061224283398181016040528101906100329190610840565b87878781600390816100449190610b45565b5080600490816100549190610b45565b5050506000600560006101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100e45760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100db9190610c26565b60405180910390fd5b6100f3816101f460201b60201c565b5083600560156101000a81548160ff02191690831515021790555082156101d75760008211610157576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014e90610cc4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bd90610d56565b60405180910390fd5b6101d681836102ba60201b60201c565b5b6101e788866102ba60201b60201c565b5050505050505050610e3a565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361032c5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016103239190610c26565b60405180910390fd5b61033e6000838361034260201b60201c565b5050565b61035383838361035860201b60201c565b505050565b61036661037c60201b60201c565b6103778383836103c360201b60201c565b505050565b61038a6105e860201b60201c565b156103c1576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104155780600260008282546104099190610da5565b925050819055506104e8565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156104a1578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161049893929190610de8565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610531578060026000828254039250508190555061057e565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105db9190610e1f565b60405180910390a3505050565b6000600560009054906101000a900460ff16905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061063e82610613565b9050919050565b61064e81610633565b811461065957600080fd5b50565b60008151905061066b81610645565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6106c48261067b565b810181811067ffffffffffffffff821117156106e3576106e261068c565b5b80604052505050565b60006106f66105ff565b905061070282826106bb565b919050565b600067ffffffffffffffff8211156107225761072161068c565b5b61072b8261067b565b9050602081019050919050565b60005b8381101561075657808201518184015260208101905061073b565b60008484015250505050565b600061077561077084610707565b6106ec565b90508281526020810184848401111561079157610790610676565b5b61079c848285610738565b509392505050565b600082601f8301126107b9576107b8610671565b5b81516107c9848260208601610762565b91505092915050565b6000819050919050565b6107e5816107d2565b81146107f057600080fd5b50565b600081519050610802816107dc565b92915050565b60008115159050919050565b61081d81610808565b811461082857600080fd5b50565b60008151905061083a81610814565b92915050565b600080600080600080600080610100898b03121561086157610860610609565b5b600061086f8b828c0161065c565b985050602089015167ffffffffffffffff8111156108905761088f61060e565b5b61089c8b828c016107a4565b975050604089015167ffffffffffffffff8111156108bd576108bc61060e565b5b6108c98b828c016107a4565b96505060606108da8b828c016107f3565b95505060806108eb8b828c0161082b565b94505060a06108fc8b828c0161082b565b93505060c061090d8b828c016107f3565b92505060e061091e8b828c0161065c565b9150509295985092959890939650565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061098057607f821691505b60208210810361099357610992610939565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026109fb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826109be565b610a0586836109be565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610a42610a3d610a38846107d2565b610a1d565b6107d2565b9050919050565b6000819050919050565b610a5c83610a27565b610a70610a6882610a49565b8484546109cb565b825550505050565b600090565b610a85610a78565b610a90818484610a53565b505050565b5b81811015610ab457610aa9600082610a7d565b600181019050610a96565b5050565b601f821115610af957610aca81610999565b610ad3846109ae565b81016020851015610ae2578190505b610af6610aee856109ae565b830182610a95565b50505b505050565b600082821c905092915050565b6000610b1c60001984600802610afe565b1980831691505092915050565b6000610b358383610b0b565b9150826002028217905092915050565b610b4e8261092e565b67ffffffffffffffff811115610b6757610b6661068c565b5b610b718254610968565b610b7c828285610ab8565b600060209050601f831160018114610baf5760008415610b9d578287015190505b610ba78582610b29565b865550610c0f565b601f198416610bbd86610999565b60005b82811015610be557848901518255600182019150602085019450602081019050610bc0565b86831015610c025784890151610bfe601f891682610b0b565b8355505b6001600288020188555050505b505050505050565b610c2081610633565b82525050565b6000602082019050610c3b6000830184610c17565b92915050565b600082825260208201905092915050565b7f416d6f756e74207072652073616c65206d75737420626520677265617465722060008201527f7468616e20300000000000000000000000000000000000000000000000000000602082015250565b6000610cae602683610c41565b9150610cb982610c52565b604082019050919050565b60006020820190508181036000830152610cdd81610ca1565b9050919050565b7f41646472657373207072652073616c65206d757374206265206469666665726560008201527f6e742066726f6d20300000000000000000000000000000000000000000000000602082015250565b6000610d40602983610c41565b9150610d4b82610ce4565b604082019050919050565b60006020820190508181036000830152610d6f81610d33565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610db0826107d2565b9150610dbb836107d2565b9250828201905080821115610dd357610dd2610d76565b5b92915050565b610de2816107d2565b82525050565b6000606082019050610dfd6000830186610c17565b610e0a6020830185610dd9565b610e176040830184610dd9565b949350505050565b6000602082019050610e346000830184610dd9565b92915050565b6113f980610e496000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80635c975abb116100a25780638da5cb5b116100715780638da5cb5b1461027057806395d89b411461028e578063a9059cbb146102ac578063dd62ed3e146102dc578063f2fde38b1461030c5761010b565b80635c975abb1461020e57806370a082311461022c578063715018a61461025c5780638456cb59146102665761010b565b8063313ce567116100de578063313ce567146101ac5780633f4ba83a146101ca57806340c10f19146101d457806346b45af7146101f05761010b565b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015e57806323b872dd1461017c575b600080fd5b610118610328565b604051610125919061104d565b60405180910390f35b61014860048036038101906101439190611108565b6103ba565b6040516101559190611163565b60405180910390f35b6101666103dd565b604051610173919061118d565b60405180910390f35b610196600480360381019061019191906111a8565b6103e7565b6040516101a39190611163565b60405180910390f35b6101b4610416565b6040516101c19190611217565b60405180910390f35b6101d261041f565b005b6101ee60048036038101906101e99190611108565b610431565b005b6101f861045d565b6040516102059190611163565b60405180910390f35b610216610470565b6040516102239190611163565b60405180910390f35b61024660048036038101906102419190611232565b610487565b604051610253919061118d565b60405180910390f35b6102646104cf565b005b61026e6104e3565b005b6102786104f5565b604051610285919061126e565b60405180910390f35b61029661051f565b6040516102a3919061104d565b60405180910390f35b6102c660048036038101906102c19190611108565b6105b1565b6040516102d39190611163565b60405180910390f35b6102f660048036038101906102f19190611289565b6105d4565b604051610303919061118d565b60405180910390f35b61032660048036038101906103219190611232565b61065b565b005b606060038054610337906112f8565b80601f0160208091040260200160405190810160405280929190818152602001828054610363906112f8565b80156103b05780601f10610385576101008083540402835291602001916103b0565b820191906000526020600020905b81548152906001019060200180831161039357829003601f168201915b5050505050905090565b6000806103c56106e1565b90506103d28185856106e9565b600191505092915050565b6000600254905090565b6000806103f26106e1565b90506103ff8582856106fb565b61040a85858561078f565b60019150509392505050565b60006012905090565b610427610883565b61042f61090a565b565b610439610883565b600560159054906101000a900460ff161561045957610458828261096d565b5b5050565b600560159054906101000a900460ff1681565b6000600560009054906101000a900460ff16905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104d7610883565b6104e160006109ef565b565b6104eb610883565b6104f3610ab5565b565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461052e906112f8565b80601f016020809104026020016040519081016040528092919081815260200182805461055a906112f8565b80156105a75780601f1061057c576101008083540402835291602001916105a7565b820191906000526020600020905b81548152906001019060200180831161058a57829003601f168201915b5050505050905090565b6000806105bc6106e1565b90506105c981858561078f565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610663610883565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106d55760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106cc919061126e565b60405180910390fd5b6106de816109ef565b50565b600033905090565b6106f68383836001610b18565b505050565b600061070784846105d4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107895781811015610779578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161077093929190611329565b60405180910390fd5b61078884848484036000610b18565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108015760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107f8919061126e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108735760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161086a919061126e565b60405180910390fd5b61087e838383610cef565b505050565b61088b6106e1565b73ffffffffffffffffffffffffffffffffffffffff166108a96104f5565b73ffffffffffffffffffffffffffffffffffffffff1614610908576108cc6106e1565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108ff919061126e565b60405180910390fd5b565b610912610cff565b6000600560006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6109566106e1565b604051610963919061126e565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109df5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109d6919061126e565b60405180910390fd5b6109eb60008383610cef565b5050565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610abd610d3f565b6001600560006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610b016106e1565b604051610b0e919061126e565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b8a5760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b81919061126e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bfc5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610bf3919061126e565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610ce9578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610ce0919061118d565b60405180910390a35b50505050565b610cfa838383610d80565b505050565b610d07610470565b610d3d576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610d47610470565b15610d7e576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610d88610d3f565b610d93838383610d98565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610dea578060026000828254610dde919061138f565b92505081905550610ebd565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e76578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e6d93929190611329565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f065780600260008282540392505081905550610f53565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fb0919061118d565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ff7578082015181840152602081019050610fdc565b60008484015250505050565b6000601f19601f8301169050919050565b600061101f82610fbd565b6110298185610fc8565b9350611039818560208601610fd9565b61104281611003565b840191505092915050565b600060208201905081810360008301526110678184611014565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061109f82611074565b9050919050565b6110af81611094565b81146110ba57600080fd5b50565b6000813590506110cc816110a6565b92915050565b6000819050919050565b6110e5816110d2565b81146110f057600080fd5b50565b600081359050611102816110dc565b92915050565b6000806040838503121561111f5761111e61106f565b5b600061112d858286016110bd565b925050602061113e858286016110f3565b9150509250929050565b60008115159050919050565b61115d81611148565b82525050565b60006020820190506111786000830184611154565b92915050565b611187816110d2565b82525050565b60006020820190506111a2600083018461117e565b92915050565b6000806000606084860312156111c1576111c061106f565b5b60006111cf868287016110bd565b93505060206111e0868287016110bd565b92505060406111f1868287016110f3565b9150509250925092565b600060ff82169050919050565b611211816111fb565b82525050565b600060208201905061122c6000830184611208565b92915050565b6000602082840312156112485761124761106f565b5b6000611256848285016110bd565b91505092915050565b61126881611094565b82525050565b6000602082019050611283600083018461125f565b92915050565b600080604083850312156112a05761129f61106f565b5b60006112ae858286016110bd565b92505060206112bf858286016110bd565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061131057607f821691505b602082108103611323576113226112c9565b5b50919050565b600060608201905061133e600083018661125f565b61134b602083018561117e565b611358604083018461117e565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061139a826110d2565b91506113a5836110d2565b92508282019050808211156113bd576113bc611360565b5b9291505056fea26469706673582212202d86305af16936c8c777497c057f9cbdfff6b5701c57c9dd73783f8c5345be1c64736f6c634300081b0033";

type TokenTemplateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenTemplateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenTemplate__factory extends ContractFactory {
  constructor(...args: TokenTemplateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _initialOwner: AddressLike,
    _name: string,
    _symbol: string,
    _initialSupply: BigNumberish,
    _isMintable: boolean,
    isPreSale: boolean,
    preSaleAmount: BigNumberish,
    preSaleAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _initialOwner,
      _name,
      _symbol,
      _initialSupply,
      _isMintable,
      isPreSale,
      preSaleAmount,
      preSaleAddress,
      overrides || {}
    );
  }
  override deploy(
    _initialOwner: AddressLike,
    _name: string,
    _symbol: string,
    _initialSupply: BigNumberish,
    _isMintable: boolean,
    isPreSale: boolean,
    preSaleAmount: BigNumberish,
    preSaleAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _initialOwner,
      _name,
      _symbol,
      _initialSupply,
      _isMintable,
      isPreSale,
      preSaleAmount,
      preSaleAddress,
      overrides || {}
    ) as Promise<
      TokenTemplate & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenTemplate__factory {
    return super.connect(runner) as TokenTemplate__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenTemplateInterface {
    return new Interface(_abi) as TokenTemplateInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenTemplate {
    return new Contract(address, _abi, runner) as unknown as TokenTemplate;
  }
}
